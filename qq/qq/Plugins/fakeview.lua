local qq = eqqlocal Plugin = {	Name = "Fake View",	Alias = "fakeview"}local LocalPlayer = qq.GlobalCopy.LocalPlayerlocal CmdMeta = qq.Meta.Cmdlocal PlyMeta = qq.Meta.Plylocal EntMeta = qq.Meta.Entlocal VecMeta = qq.Meta.Veclocal AngMeta = qq.Meta.AngPlugin.Init = function()	qq.CreateSetting(qq.MENU_GENERIC, Plugin, "enabled", "Fake View", false, {Save = true}, Plugin.EnabledCallback)	qq.CreateSetting(qq.MENU_GENERIC, Plugin, "aimbotonly", "Aimbot Only", false, {Save = true})endPlugin.PEnabled = function()	if not qq.Setting(Plugin, "enabled") then return false end	local aimonly = qq.Setting(Plugin, "aimbotonly")	if not aimonly then return true end		local aimbot = qq.Plugins["aimbot"]	if not aimbot then return false end	return qq.Setting(aimbot, "enabled")endqq.View = Angle(0,0,0)qq.GetView = function(enabled_overide)	if Plugin.PEnabled() or enabled_overide then		return qq.View	else		local ply = LocalPlayer()		if !ValidEntity(ply) then return qq.View end		return EntMeta.EyeAngles(ply)	endendPlugin.EnabledCallback = function()	local ply = LocalPlayer()	if !ValidEntity(ply) then return end	qq.View = EntMeta.EyeAngles(ply)endPlugin.SelfSpawn = function(pl)	if pl == LocalPlayer() then		Plugin.EnabledCallback()	endendlocal sensitivity = 0.022Plugin.RotateView = function(cmd)	qq.View.p = math.Clamp(qq.View.p + (CmdMeta.GetMouseY(cmd) * sensitivity), -89, 89)	qq.View.y = math.NormalizeAngle(qq.View.y + (CmdMeta.GetMouseX(cmd) * sensitivity * -1))	Plugin.StartAim = CmdMeta.GetViewAngles(cmd)		//if not Plugin.Foward then		Plugin.Forward = CmdMeta.GetForwardMove(cmd)		Plugin.Right = CmdMeta.GetSideMove(cmd)		Plugin.Up = CmdMeta.GetUpMove(cmd)	///end	qq.DidAimThisCM = falseendPlugin.FakeView = function(base)	if GetViewEntity() != LocalPlayer() then return end	if not Plugin.PEnabled() then return end		base.angles = qq.GetView() or base.angles //base.angles or (qq.AngleTo or qq.View)	base.angles.r = 0 // No crappy screen tilting in ZS.	base.Changed = trueendPlugin.FixMovement = function(cmd)	if not qq.Setting(Plugin, "enabled") then return end	if not qq.DidAimThisCM then		CmdMeta.SetViewAngles(cmd, qq.GetView())	end			local view = qq:GetView()	local viewforward, viewright, viewup = AngMeta.Forward(view),AngMeta.Right(view),AngMeta.Up(view)		local aim = CmdMeta.GetViewAngles(cmd)	local aimforward, aimright, aimup = AngMeta.Forward(aim),AngMeta.Right(aim),AngMeta.Up(aim)	local forward = CmdMeta.GetForwardMove(cmd) * 10	local right = CmdMeta.GetSideMove(cmd) * 10	local up = CmdMeta.GetUpMove(cmd) * 10		CmdMeta.SetForwardMove(cmd,		VecMeta.Dot( forward * viewforward, aimforward )		+ VecMeta.Dot( right * viewright, aimforward )		+ VecMeta.Dot( up * viewup, aimforward )	)		CmdMeta.SetSideMove(cmd,		VecMeta.Dot( forward * viewforward, aimright )		+ VecMeta.Dot( right * viewright, aimright )		+ VecMeta.Dot( up * viewup, aimright )	)	// This causes the char to slow down for some reason :(	CmdMeta.SetUpMove(cmd, 0)	/*	CmdMeta.SetUpMove(cmd,		VecMeta.Dot( forward * viewforward, aimup )		+ VecMeta.Dot( right * viewright, aimforward )		+ VecMeta.Dot( up * viewup, aimforward )	)	*/		/*	local aim = Plugin.StartAim //qq.GetView()	local aimforward, aimright, aimup = AngMeta.Forward(aim),AngMeta.Right(aim),AngMeta.Up(aim)	//print("A",aimforward )	//aimforward, aimright, aimup = Plugin.Forward,Plugin.Right,Plugin.Up	//print("B",aimforward )	//local aimforwardn = VecMeta.GetNormal(aimforward)	//local aimrightn = VecMeta.GetNormal(aimright)	//local aimupn = VecMeta.GetNormal(aimup)			local realaim = CmdMeta.GetViewAngles(cmd)	local forward, right, up = AngMeta.Forward(realaim),AngMeta.Right(realaim),AngMeta.Up(realaim)		local forwardn = VecMeta.GetNormal(forward)	local rightn = VecMeta.GetNormal(right)	local upn = VecMeta.GetNormal(up)		CmdMeta.SetForwardMove( cmd,		VecMeta.DotProduct(aimforward * forwardn, forward) +		VecMeta.DotProduct(aimright * rightn, forward) +		VecMeta.DotProduct(aimup * upn, forward) )			CmdMeta.SetSideMove( cmd,		VecMeta.DotProduct(aimforward * forwardn, right) +		VecMeta.DotProduct(aimright * rightn, right) +		VecMeta.DotProduct(aimup * upn, right) )			CmdMeta.SetUpMove( cmd,		VecMeta.DotProduct(aimforward * forwardn, up) +		VecMeta.DotProduct(aimright * rightn, up) +		VecMeta.DotProduct(aimup * upn, up) )			local aim = CmdMeta.GetViewAngles(cmd)	local sensitivity = 0.22	//local diff = aim - Plugin.StartAim	local diff = aim - Plugin.StartAim	//CmdMeta.SetMouseX(cmd, diff.y / sensitivity)	//CmdMeta.SetMouseY(cmd, diff.p / sensitivity)		// Change the players movement to be relative to their view instead of their aim.	local move = Vector(CmdMeta.GetForwardMove(cmd), CmdMeta.GetSideMove(cmd), 0)	local norm = VecMeta.GetNormal(move)		local set = AngMeta.Forward(VecMeta.Angle(norm) + (aim - qq.GetView())) * VecMeta.Length(move)	//local set = AngMeta.Forward(VecMeta.Angle(norm) + qq.GetView()) * VecMeta.Length(move)	CmdMeta.SetForwardMove(cmd, set.x)	CmdMeta.SetSideMove(cmd, set.y)	//CmdMeta.SetUpMove(cmd, set.z)	*/endPlugin.Hooks = {	PreCreateMove = Plugin.RotateView,	LastCreateMove = Plugin.FixMovement,	BaseCalcView = Plugin.FakeView,	PlayerSpawn = Plugin.SelfSpawn}qq.RegisterPlugin(Plugin)